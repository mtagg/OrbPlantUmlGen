<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.12">
  <POU Name="FB_SelfTest" Id="{1bb06a1d-0466-4467-bee4-d88d42712776}" SpecialFunc="None">
    <Declaration><![CDATA[FUNCTION_BLOCK FB_SelfTest EXTENDS FB_StateMachine IMPLEMENTS I_StateMachine
VAR_INPUT
	bStart : BOOL;
	fbStepper : REFERENCE TO FB_Stepper;
	fbLinearActuator : REFERENCE TO FB_LinearActuator;
	fbJointSR : REFERENCE TO FB_Joint;
END_VAR
VAR_OUTPUT
END_VAR
VAR
	eInnerState : E_SelftestStates;
	bCompleted : BOOL;
	dtTimeCompleted: DATE_AND_TIME;
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[OuterLopSM();]]></ST>
    </Implementation>
    <Folder Name="Properties" Id="{b682ec8a-b81c-4636-afdb-e735070caa7e}" />
    <Method Name="Disable" Id="{24cb7115-e443-47a2-b5bf-65e04415eec9}">
      <Declaration><![CDATA[METHOD Disable : BOOL

VAR
	bChildBusy  : BOOL := FALSE;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[fbStepper.Active:=FALSE;
fbLinearActuator.Active:=FALSE;
fbJointSR.Active:=FALSE;

Disable := TRUE;]]></ST>
      </Implementation>
    </Method>
    <Method Name="InnerLoopSM" Id="{1533b789-f1f5-4dea-814a-7ae4a8c15ba7}">
      <Declaration><![CDATA[METHOD InnerLoopSM : BOOL
]]></Declaration>
      <Implementation>
        <ST><![CDATA[// update all children FBs
// call to fbStepper() done by the parent (FB_ControllerArm) 

CASE CyclicInnerCase(TO_STRING(eInnerState)) OF
	E_SelftestStates.Idle:
		IF bStart THEN
			bStart := FALSE;
			ChangeInnerState(E_SelftestStates.HomeStepper1);
		END_IF
	
	E_SelftestStates.HomeStepper1:
		IF fbStepper.Busy THEN
			// fbStepper should never be busy here 	
			sErrorDetails := 'fbStepper.Busy = TRUE';
			fbEventHandler(eNapID:=E_Event.UNABLE_TO_START_TASK,sMessage:=sErrorDetails);
			bError := TRUE;
		ELSE	
			IF fbStepper.bError THEN
				sErrorDetails := 'fbStepper.bReady=FALSE';
				fbEventHandler(eNapID:=E_Event.UNABLE_TO_START_TASK,sMessage:=sErrorDetails);
				bError := TRUE;
			ELSE
				fbStepper.bStartHoming:=TRUE;
				ChangeInnerState(E_SelftestStates.HomeStepper2);
			END_IF
		END_IF


	E_SelftestStates.HomeStepper2:
		IF fbStepper.Busy THEN
			// Wait... fbStepper still busy 	
		ELSE
			IF fbStepper.bError THEN
				fbEventHandler(eNapID:=E_Event.TASK_FAILED,sTrace:=fbStepper.EventTrace);
				fbStepper.ErrorAck:=TRUE;
				bError := TRUE;
			ELSE
				IF fbStepper.Homed THEN
					ChangeInnerState(E_SelftestStates.HomeLinearActuator1);
				ELSE
					sErrorDetails := 'fbStepper.Homed=FALSE';
					fbEventHandler(eNapID:=E_Event.TASK_FAILED,sMessage:=sErrorDetails);
					bError := TRUE;
				END_IF
			END_IF
		END_IF
		
	E_SelftestStates.HomeLinearActuator1:
		IF fbLinearActuator.Busy THEN
			// fbStepper should never be busy here 	
			sErrorDetails := 'fbLinearActuator.Busy = TRUE';
			fbEventHandler(eNapID:=E_Event.UNABLE_TO_START_TASK,sMessage:=sErrorDetails);
			bError := TRUE;
		ELSE	
			IF fbLinearActuator.bError THEN
				sErrorDetails := 'fbLinearActuator.bReady=FALSE';
				fbEventHandler(eNapID:=E_Event.UNABLE_TO_START_TASK,sMessage:=sErrorDetails);
				bError := TRUE;
			ELSE
				fbLinearActuator.bStartHoming:=TRUE;
				ChangeInnerState(E_SelftestStates.HomeLinearActuator2);
			END_IF
		END_IF
		
	E_SelftestStates.HomeLinearActuator2:
		IF fbLinearActuator.Busy THEN
			// Wait... fbLinearActuator still busy 	
		ELSE
			IF fbLinearActuator.bError THEN
				fbEventHandler(eNapID:=E_Event.TASK_FAILED,sTrace:=fbLinearActuator.EventTrace);
				fbLinearActuator.ErrorAck:=TRUE;
				bError := TRUE;
			ELSE
				IF fbLinearActuator.Homed THEN
					ChangeInnerState(E_SelftestStates.SetupEncoders1);
				ELSE
					sErrorDetails := 'fbLinearActuator.Homed=FALSE';
					fbEventHandler(eNapID:=E_Event.TASK_FAILED,sMessage:=sErrorDetails);
					bError := TRUE;
				END_IF
			END_IF
		END_IF
	
	E_SelftestStates.SetupEncoders1:
		IF fbJointSR.Busy THEN
			// fbJointSR should never be busy here 	
			sErrorDetails := 'fbJointSR.Busy = TRUE';
			fbEventHandler(eNapID:=E_Event.UNABLE_TO_START_TASK,sMessage:=sErrorDetails);
			bError := TRUE;
		ELSE	
			IF fbJointSR.bError THEN
				sErrorDetails := 'fbJointSR.bReady=FALSE';
				fbEventHandler(eNapID:=E_Event.UNABLE_TO_START_TASK,sMessage:=sErrorDetails);
				bError := TRUE;
			ELSE
				fbJointSR.bStartSetup:=TRUE;
				ChangeInnerState(E_SelftestStates.SetupEncoders2);
			END_IF
		END_IF
		
	E_SelftestStates.SetupEncoders2:
		IF fbJointSR.Busy THEN
			// Wait... fbJointSR still busy 	
		ELSE
			IF fbJointSR.bError THEN
				fbEventHandler(eNapID:=E_Event.TASK_FAILED,sTrace:=fbLinearActuator.EventTrace);
				fbLinearActuator.ErrorAck:=TRUE;
				bError := TRUE;
			ELSE
				IF fbJointSR.Calibrated THEN
					ChangeInnerState(E_SelftestStates.CheckAbsEncoderOffsets1);
				ELSE
					sErrorDetails := 'fbLinearActuator.Homed=FALSE';
					fbEventHandler(eNapID:=E_Event.TASK_FAILED,sMessage:=sErrorDetails);
					bError := TRUE;
				END_IF
			END_IF
		END_IF
		
	E_SelftestStates.CheckAbsEncoderOffsets1:
		ChangeInnerState(E_SelftestStates.CheckAbsEncoderOffsets2);
		
	E_SelftestStates.CheckAbsEncoderOffsets2:
		ChangeInnerState(E_SelftestStates.WrapUp);
		
	E_SelftestStates.WrapUp:
		bCompleted := TRUE;
		dtTimeCompleted := DateTime.GVL_DATE_TIME;
		fbEventHandler(eNapID:=E_Event.REQUEST_COMPLETED);
		ChangeInnerState(E_SelftestStates.Idle);
END_CASE
]]></ST>
      </Implementation>
    </Method>
    <Method Name="Reset" Id="{0271353f-d7b7-4a53-aa67-eed09f291c10}">
      <Declaration><![CDATA[METHOD Reset : BOOL
]]></Declaration>
      <Implementation>
        <ST><![CDATA[// reset variables specific to this FB 
bCompleted := FALSE;
dtTimeCompleted := DATE_AND_TIME#1970-1-1-0:0:0;
]]></ST>
      </Implementation>
    </Method>
    <Property Name="SelftestNeeded" Id="{057e6406-8538-41aa-9d0c-3467e2ddc63d}" FolderPath="Properties\">
      <Declaration><![CDATA[PROPERTY SelftestNeeded : BOOL]]></Declaration>
      <Get Name="Get" Id="{747024a2-f3ae-4631-b586-35e134748b51}">
        <Declaration><![CDATA[]]></Declaration>
        <Implementation>
          <ST><![CDATA[// TODO: Check if dtTimeCompleted is too old. If so set SelftestNeeded := TRUE
SelftestNeeded := NOT bCompleted;]]></ST>
        </Implementation>
      </Get>
    </Property>
    <Method Name="Setup" Id="{fdd0c095-c587-4815-b66b-4d1d74983531}">
      <Declaration><![CDATA[METHOD Setup : BOOL
]]></Declaration>
      <Implementation>
        <ST><![CDATA[eStateMachineSourceID := eStateSourceID;
SetInnerEnumeration(nStateEnum:=THIS^.eInnerState);
]]></ST>
      </Implementation>
    </Method>
    <Property Name="TimeCompleted" Id="{1cbfd24b-c535-454b-97a1-c0e9fffacf40}" FolderPath="Properties\">
      <Declaration><![CDATA[PROPERTY TimeCompleted : DATE_AND_TIME]]></Declaration>
      <Get Name="Get" Id="{f251df04-d6e9-40c1-9b07-1613530dd50c}">
        <Declaration><![CDATA[]]></Declaration>
        <Implementation>
          <ST><![CDATA[TimeCompleted := dtTimeCompleted;]]></ST>
        </Implementation>
      </Get>
    </Property>
    <LineIds Name="FB_SelfTest">
      <LineId Id="9" Count="0" />
    </LineIds>
    <LineIds Name="FB_SelfTest.Disable">
      <LineId Id="8" Count="0" />
      <LineId Id="21" Count="0" />
      <LineId Id="55" Count="0" />
      <LineId Id="22" Count="0" />
      <LineId Id="49" Count="0" />
    </LineIds>
    <LineIds Name="FB_SelfTest.InnerLoopSM">
      <LineId Id="120" Count="0" />
      <LineId Id="119" Count="0" />
      <LineId Id="121" Count="0" />
      <LineId Id="58" Count="1" />
      <LineId Id="61" Count="0" />
      <LineId Id="127" Count="0" />
      <LineId Id="62" Count="3" />
      <LineId Id="172" Count="0" />
      <LineId Id="222" Count="2" />
      <LineId Id="206" Count="1" />
      <LineId Id="173" Count="0" />
      <LineId Id="177" Count="0" />
      <LineId Id="213" Count="0" />
      <LineId Id="215" Count="0" />
      <LineId Id="179" Count="0" />
      <LineId Id="211" Count="1" />
      <LineId Id="176" Count="0" />
      <LineId Id="174" Count="0" />
      <LineId Id="76" Count="0" />
      <LineId Id="83" Count="1" />
      <LineId Id="185" Count="0" />
      <LineId Id="208" Count="1" />
      <LineId Id="188" Count="0" />
      <LineId Id="219" Count="1" />
      <LineId Id="216" Count="0" />
      <LineId Id="218" Count="0" />
      <LineId Id="189" Count="0" />
      <LineId Id="191" Count="0" />
      <LineId Id="193" Count="0" />
      <LineId Id="195" Count="1" />
      <LineId Id="194" Count="0" />
      <LineId Id="192" Count="0" />
      <LineId Id="190" Count="0" />
      <LineId Id="205" Count="0" />
      <LineId Id="114" Count="1" />
      <LineId Id="226" Count="13" />
      <LineId Id="225" Count="0" />
      <LineId Id="131" Count="0" />
      <LineId Id="133" Count="0" />
      <LineId Id="241" Count="15" />
      <LineId Id="240" Count="0" />
      <LineId Id="136" Count="0" />
      <LineId Id="138" Count="0" />
      <LineId Id="259" Count="13" />
      <LineId Id="258" Count="0" />
      <LineId Id="134" Count="0" />
      <LineId Id="139" Count="0" />
      <LineId Id="274" Count="15" />
      <LineId Id="273" Count="0" />
      <LineId Id="140" Count="0" />
      <LineId Id="142" Count="0" />
      <LineId Id="155" Count="0" />
      <LineId Id="143" Count="0" />
      <LineId Id="145" Count="0" />
      <LineId Id="144" Count="0" />
      <LineId Id="148" Count="1" />
      <LineId Id="158" Count="0" />
      <LineId Id="157" Count="0" />
      <LineId Id="170" Count="0" />
      <LineId Id="147" Count="0" />
      <LineId Id="99" Count="0" />
      <LineId Id="4" Count="0" />
    </LineIds>
    <LineIds Name="FB_SelfTest.Reset">
      <LineId Id="6" Count="0" />
      <LineId Id="8" Count="0" />
      <LineId Id="4" Count="0" />
      <LineId Id="18" Count="0" />
    </LineIds>
    <LineIds Name="FB_SelfTest.SelftestNeeded.Get">
      <LineId Id="7" Count="0" />
      <LineId Id="2" Count="0" />
    </LineIds>
    <LineIds Name="FB_SelfTest.Setup">
      <LineId Id="4" Count="0" />
      <LineId Id="27" Count="0" />
      <LineId Id="11" Count="0" />
    </LineIds>
    <LineIds Name="FB_SelfTest.TimeCompleted.Get">
      <LineId Id="2" Count="0" />
    </LineIds>
  </POU>
</TcPlcObject>