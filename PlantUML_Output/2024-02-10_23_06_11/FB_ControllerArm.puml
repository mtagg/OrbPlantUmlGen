@startuml State Diagram

skin rose
'left to right direction
hide empty description
!theme reddress-lightgreen
title FB_ControllerArm State Diagram



state FB_ControllerArm{

state eInnerState #03adfc {
	[*] --> eInnerState_Idle : START
	state eInnerState_Idle{
	state eInnerState_Idle_Node_0 <<choice>>
	[*] --> eInnerState_Idle_Node_0 : START
	eInnerState_Idle_Node_0 --> [*] : (bStartSelftest)
	state eInnerState_Idle_Node_1 <<choice>>
	eInnerState_Idle_Node_1 --> [*] : (bStartErgonomics)
	state eInnerState_Idle_Node_2 <<choice>>
	eInnerState_Idle_Node_2 --> [*] : (bStartTeleoperation)
	}
	state eInnerState_Selftest1{
	state eInnerState_Selftest1_Node_0 <<choice>>
	[*] --> eInnerState_Selftest1_Node_0 : START
		state eInnerState_Selftest1_Node_1 <<choice>>
	eInnerState_Selftest1_Node_1 --> [*] : (NOT (fbSelfTest.bError))
	}
	state eInnerState_Selftest2{
	state eInnerState_Selftest2_Node_0 <<choice>>
	[*] --> eInnerState_Selftest2_Node_0 : START
		state eInnerState_Selftest2_Node_1 <<choice>>
		state eInnerState_Selftest2_Node_2 <<choice>>
			state eInnerState_Selftest2_Node_3 <<choice>>
	eInnerState_Selftest2_Node_3 --> [*] : (Calibrated)
	}
	state eInnerState_Ergonomics1{
	state eInnerState_Ergonomics1_Node_0 <<choice>>
	[*] --> eInnerState_Ergonomics1_Node_0 : START
		state eInnerState_Ergonomics1_Node_1 <<choice>>
	eInnerState_Ergonomics1_Node_1 --> [*] : (NOT (fbErgonomics.bError))
	}
	state eInnerState_Ergonomics2{
	state eInnerState_Ergonomics2_Node_0 <<choice>>
	[*] --> eInnerState_Ergonomics2_Node_0 : START
		state eInnerState_Ergonomics2_Node_1 <<choice>>
		state eInnerState_Ergonomics2_Node_2 <<choice>>
	eInnerState_Ergonomics2_Node_2 --> [*] : (NOT (fbErgonomics.bError))
	}
	state eInnerState_Teleoperation1{
	}
	}
	eInnerState_Idle --> eInnerState_Selftest1 : (bStartSelftest)
	eInnerState_Idle_Node_0 --> eInnerState_Idle_Node_1 : (NOT (bStartSelftest))
	eInnerState_Idle --> eInnerState_Ergonomics1 : (bStartErgonomics)
	eInnerState_Idle_Node_1 --> eInnerState_Idle_Node_2 : (NOT (bStartErgonomics))
	eInnerState_Idle --> eInnerState_Teleoperation1 : (bStartTeleoperation)
	eInnerState_Selftest1_Node_0 --> eInnerState_Selftest1_Node_1 : (NOT (fbSelfTest.Busy))
	eInnerState_Selftest1 --> eInnerState_Selftest2 : (NOT (fbSelfTest.bError))
	eInnerState_Selftest2_Node_0 --> eInnerState_Selftest2_Node_1 : (fbSelfTest.Busy)
	eInnerState_Selftest2_Node_0 --> eInnerState_Selftest2_Node_2 : (NOT (fbSelfTest.Busy))
	eInnerState_Selftest2_Node_2 --> eInnerState_Selftest2_Node_3 : (NOT (fbSelfTest.bError))
	eInnerState_Selftest2 --> eInnerState_Idle : (Calibrated)
	eInnerState_Ergonomics1_Node_0 --> eInnerState_Ergonomics1_Node_1 : (NOT (fbErgonomics.Busy))
	eInnerState_Ergonomics1 --> eInnerState_Ergonomics2 : (NOT (fbErgonomics.bError))
	eInnerState_Ergonomics2_Node_0 --> eInnerState_Ergonomics2_Node_1 : (fbErgonomics.Busy)
	eInnerState_Ergonomics2_Node_0 --> eInnerState_Ergonomics2_Node_2 : (NOT (fbErgonomics.Busy))
	eInnerState_Ergonomics2 --> eInnerState_Idle : (NOT (fbErgonomics.bError))


}

@enduml
