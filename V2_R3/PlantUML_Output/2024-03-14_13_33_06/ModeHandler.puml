@startuml State Diagram

!theme plain
'skin rose
left to right direction
hide empty description
'!theme reddress-lightgreen
title FB_ModeHandler State Diagram



state FB_ModeHandler{
state eInnerState #84b1f5 {
	[*] --> eInnerState_Idle : START
	state eInnerState_Idle #lightblue {
state "ERROR" as eInnerState_Idle_ERROR <<exitPoint>> #ff3333
	state eInnerState_Idle_Node_1 <<choice>>
	[*] ----> eInnerState_Idle_Node_1 : START
	eInnerState_Idle_Node_1 ----> [*] : (Halt\nAND bEndCase)
		state eInnerState_Idle_Node_2 <<choice>>
			state eInnerState_Idle_Node_3 <<choice>>
			state "fbEventHandler(NO_ARMS_ENABLED)" as eInnerState_Idle_Node_4 
			state eInnerState_Idle_Node_5 <<choice>>
	eInnerState_Idle_Node_5 ----> [*] : (NOT (ArmsDocked <> E_Arm.Both))
	}
	state eInnerState_Selftest1 #lightblue {
state "ERROR" as eInnerState_Selftest1_ERROR <<exitPoint>> #ff3333
	state eInnerState_Selftest1_Node_1 <<choice>>
	[*] ----> eInnerState_Selftest1_Node_1 : START
	eInnerState_Selftest1_Node_1 ----> [*] : (Halt)
		state eInnerState_Selftest1_Node_2 <<choice>>
	eInnerState_Selftest1_Node_2 ----> [*] : (ArmsReady = E_Arm.Both)
		state eInnerState_Selftest1_Node_3 <<choice>>
		state "ReportFailedArm()" as eInnerState_Selftest1_Node_4 
	}
	state eInnerState_Selftest2 #lightblue {
state "ERROR" as eInnerState_Selftest2_ERROR <<exitPoint>> #ff3333
	state eInnerState_Selftest2_Node_1 <<choice>>
	[*] ----> eInnerState_Selftest2_Node_1 : START
	eInnerState_Selftest2_Node_1 ----> [*] : (Halt)
		state eInnerState_Selftest2_Node_2 <<choice>>
			state eInnerState_Selftest2_Node_3 <<choice>>
	eInnerState_Selftest2_Node_3 ----> [*] : (ArmsCalibrated = E_Arm.Both)
			state "ReportUncalibratedArm()" as eInnerState_Selftest2_Node_4 
		state eInnerState_Selftest2_Node_5 <<choice>>
			state eInnerState_Selftest2_Node_6 <<choice>>
	eInnerState_Selftest2_Node_6 ----> [*] : (CheckForFailedDockedArms())
	}
	state eInnerState_HaltSelftest #lightblue {
state "ERROR" as eInnerState_HaltSelftest_ERROR <<exitPoint>> #ff3333
	state eInnerState_HaltSelftest_Node_1 <<choice>>
	[*] ----> eInnerState_HaltSelftest_Node_1 : START
		state eInnerState_HaltSelftest_Node_2 <<choice>>
	eInnerState_HaltSelftest_Node_2 ----> [*] : (bEndCase)
	eInnerState_HaltSelftest_Node_2 ----> [*] : (NOT (bEndCase))
	state eInnerState_HaltSelftest_Node_3 <<choice>>
	state "ReportFailedArm()" as eInnerState_HaltSelftest_Node_4 
	}
	state eInnerState_Ergonomics1 #lightblue {
state "ERROR" as eInnerState_Ergonomics1_ERROR <<exitPoint>> #ff3333
	state "ResetErgonomicsCommands()" as eInnerState_Ergonomics1_Node_1 
	[*] ----> eInnerState_Ergonomics1_Node_1 : START
	eInnerState_Ergonomics1_Node_1 ----> [*] : None
	}
	state eInnerState_Ergonomics2 #lightblue {
state "ERROR" as eInnerState_Ergonomics2_ERROR <<exitPoint>> #ff3333
	state "ReportArmVariables()" as eInnerState_Ergonomics2_Node_1 
	[*] ----> eInnerState_Ergonomics2_Node_1 : START
		state eInnerState_Ergonomics2_Node_2 <<choice>>
			state eInnerState_Ergonomics2_Node_3 <<choice>>
				state eInnerState_Ergonomics2_Node_4 <<choice>>
	eInnerState_Ergonomics2_Node_2 ----> [*] : (Halt)
			state eInnerState_Ergonomics2_Node_5 <<choice>>
	eInnerState_Ergonomics2_Node_5 ----> [*] : (fbRightArm.Ready\nAND  fbLeftArm.Ready)
				state eInnerState_Ergonomics2_Node_6 <<choice>>
				state eInnerState_Ergonomics2_Node_7 <<choice>>
				state "fbEventHandler(TASK_FAILED)" as eInnerState_Ergonomics2_Node_8 
				state eInnerState_Ergonomics2_Node_9 <<choice>>
				state "fbEventHandler(TASK_FAILED)" as eInnerState_Ergonomics2_Node_10 
	}
	state eInnerState_HaltErgonomics #lightblue {
state "ERROR" as eInnerState_HaltErgonomics_ERROR <<exitPoint>> #ff3333
	state "ReportArmVariables()" as eInnerState_HaltErgonomics_Node_1 
	[*] ----> eInnerState_HaltErgonomics_Node_1 : START
		state eInnerState_HaltErgonomics_Node_2 <<choice>>
			state eInnerState_HaltErgonomics_Node_3 <<choice>>
	eInnerState_HaltErgonomics_Node_3 ----> [*] : (bEndCase)
	eInnerState_HaltErgonomics_Node_3 ----> [*] : (NOT (bEndCase))
		state eInnerState_HaltErgonomics_Node_4 <<choice>>
		state "ReportFailedArm()" as eInnerState_HaltErgonomics_Node_5 
	}
	state eInnerState_Teleoperation1 #lightblue {
state "ERROR" as eInnerState_Teleoperation1_ERROR <<exitPoint>> #ff3333
	state "ReportArmVariables()" as eInnerState_Teleoperation1_Node_1 
	[*] ----> eInnerState_Teleoperation1_Node_1 : START
		state eInnerState_Teleoperation1_Node_2 <<choice>>
	eInnerState_Teleoperation1_Node_2 ----> [*] : (Halt)
			state eInnerState_Teleoperation1_Node_3 <<choice>>
	eInnerState_Teleoperation1_Node_3 ----> [*] : (ArmsDocked = E_Arm.Both)
	}
	state eInnerState_Teleoperation2 #lightblue {
state "ERROR" as eInnerState_Teleoperation2_ERROR <<exitPoint>> #ff3333
	state "ReportArmVariables()" as eInnerState_Teleoperation2_Node_1 
	[*] ----> eInnerState_Teleoperation2_Node_1 : START
		state eInnerState_Teleoperation2_Node_2 <<choice>>
	eInnerState_Teleoperation2_Node_2 ----> [*] : (Halt)
			state eInnerState_Teleoperation2_Node_3 <<choice>>
	eInnerState_Teleoperation2_Node_3 ----> [*] : (ArmsDocked <> E_Arm.Both)
	}
	state eInnerState_Teleoperation3 #lightblue {
state "ERROR" as eInnerState_Teleoperation3_ERROR <<exitPoint>> #ff3333
	state "ReportArmVariables()" as eInnerState_Teleoperation3_Node_1 
	[*] ----> eInnerState_Teleoperation3_Node_1 : START
		state eInnerState_Teleoperation3_Node_2 <<choice>>
	eInnerState_Teleoperation3_Node_2 ----> [*] : (Halt)
			state eInnerState_Teleoperation3_Node_3 <<choice>>
			state "ResetTeleopCommands()" as eInnerState_Teleoperation3_Node_4 
	eInnerState_Teleoperation3_Node_4 ----> [*] : (ArmsDocked = E_Arm.Both)
	}
	state eInnerState_TeleopSetup #lightblue {
state "ERROR" as eInnerState_TeleopSetup_ERROR <<exitPoint>> #ff3333
	state "ReportArmVariables()" as eInnerState_TeleopSetup_Node_1 
	[*] ----> eInnerState_TeleopSetup_Node_1 : START
		state eInnerState_TeleopSetup_Node_2 <<choice>>
	eInnerState_TeleopSetup_Node_2 ----> [*] : (Halt)
			state eInnerState_TeleopSetup_Node_3 <<choice>>
				state eInnerState_TeleopSetup_Node_4 <<choice>>
	eInnerState_TeleopSetup_Node_4 ----> [*] : (NOT (ArmsDocked = E_Arm.Both))
				state eInnerState_TeleopSetup_Node_5 <<choice>>
				state "fbEventHandler(TASK_FAILED)" as eInnerState_TeleopSetup_Node_6 
				state eInnerState_TeleopSetup_Node_7 <<choice>>
				state "fbEventHandler(TASK_FAILED)" as eInnerState_TeleopSetup_Node_8 
	}
	state eInnerState_TeleopActive #lightblue {
state "ERROR" as eInnerState_TeleopActive_ERROR <<exitPoint>> #ff3333
	state "ReportArmVariables()" as eInnerState_TeleopActive_Node_1 
	[*] ----> eInnerState_TeleopActive_Node_1 : START
		state eInnerState_TeleopActive_Node_2 <<choice>>
			state eInnerState_TeleopActive_Node_3 <<choice>>
	eInnerState_TeleopActive_Node_3 ----> [*] : (ArmsDocked = E_Arm.Both)
			state eInnerState_TeleopActive_Node_4 <<choice>>
				state eInnerState_TeleopActive_Node_5 <<choice>>
	eInnerState_TeleopActive_Node_5 ----> [*] : (ArmsDocked <> E_Arm.Both)
				state eInnerState_TeleopActive_Node_6 <<choice>>
	eInnerState_TeleopActive_Node_6 ----> [*] : (fbRightArm.ErrorNeedToDock\nOR fbLeftArm.ErrorNeedToDock)
				state eInnerState_TeleopActive_Node_7 <<choice>>
				state "fbEventHandler(TASK_FAILED)" as eInnerState_TeleopActive_Node_8 
				state eInnerState_TeleopActive_Node_9 <<choice>>
				state "fbEventHandler(TASK_FAILED)" as eInnerState_TeleopActive_Node_10 
	}
	state eInnerState_HaltTeleoperation #lightblue {
state "ERROR" as eInnerState_HaltTeleoperation_ERROR <<exitPoint>> #ff3333
	state "ReportArmVariables()" as eInnerState_HaltTeleoperation_Node_1 
	[*] ----> eInnerState_HaltTeleoperation_Node_1 : START
		state eInnerState_HaltTeleoperation_Node_2 <<choice>>
			state eInnerState_HaltTeleoperation_Node_3 <<choice>>
	eInnerState_HaltTeleoperation_Node_3 ----> [*] : (bEndCase)
	eInnerState_HaltTeleoperation_Node_3 ----> [*] : (NOT (bEndCase))
		state eInnerState_HaltTeleoperation_Node_4 <<choice>>
		state "ReportFailedArm()" as eInnerState_HaltTeleoperation_Node_5 
	}
	state eInnerState_EndCase #lightblue {
state "ERROR" as eInnerState_EndCase_ERROR <<exitPoint>> #ff3333
	state "ReportArmVariables()" as eInnerState_EndCase_Node_1 
	[*] ----> eInnerState_EndCase_Node_1 : START
	state "Reset()" as eInnerState_EndCase_Node_2 
	eInnerState_EndCase_Node_2 ----> [*] : None
	}
	}
	eInnerState_Idle ----> eInnerState_EndCase : (Halt\nAND bEndCase)
	eInnerState_Idle_Node_1 ----> eInnerState_Idle_Node_2 : (NOT (Halt\nAND bEndCase))
	eInnerState_Idle_Node_2 ----> eInnerState_Idle_Node_3 : (bStartSelftest)
	eInnerState_Idle_Node_3 ----> eInnerState_Idle_Node_4 : (NOT (bRightArmEnabled\nOR bLeftArmEnabled))
	eInnerState_Idle_Node_4 ----> eInnerState_Idle_Node_5 : ((bRightArmEnabled\nOR bLeftArmEnabled))
	eInnerState_Idle ----> eInnerState_Selftest1 : (NOT (ArmsDocked <> E_Arm.Both))
	eInnerState_Selftest1 ----> eInnerState_HaltSelftest : (Halt)
	eInnerState_Selftest1_Node_1 ----> eInnerState_Selftest1_Node_2 : (NOT (Halt))
	eInnerState_Selftest1 ----> eInnerState_Selftest2 : (ArmsReady = E_Arm.Both)
	eInnerState_Selftest1_Node_2 ----> eInnerState_Selftest1_Node_3 : (NOT (ArmsReady = E_Arm.Both))
	eInnerState_Selftest1_Node_3 ----> eInnerState_Selftest1_Node_4 : (ArmsFailed <> E_Arm.None)
	eInnerState_Selftest1_Node_4 ----> eInnerState_Selftest1_ERROR : (ArmsFailed <> E_Arm.None)
	eInnerState_Selftest2 ----> eInnerState_HaltSelftest : (Halt)
	eInnerState_Selftest2_Node_1 ----> eInnerState_Selftest2_Node_2 : (NOT (Halt))
	eInnerState_Selftest2_Node_2 ----> eInnerState_Selftest2_Node_3 : (ArmsReady = E_Arm.Both)
	eInnerState_Selftest2 ----> eInnerState_Ergonomics1 : (ArmsCalibrated = E_Arm.Both)
	eInnerState_Selftest2_Node_3 ----> eInnerState_Selftest2_Node_4 : (NOT (ArmsCalibrated = E_Arm.Both))
	eInnerState_Selftest2_Node_4 ----> eInnerState_Selftest2_ERROR : (NOT (ArmsCalibrated = E_Arm.Both))
	eInnerState_Selftest2_Node_2 ----> eInnerState_Selftest2_Node_5 : (NOT (ArmsReady = E_Arm.Both))
	eInnerState_Selftest2_Node_5 ----> eInnerState_Selftest2_Node_6 : (ArmsFailed <> E_Arm.None)
	eInnerState_Selftest2 ----> eInnerState_HaltSelftest : (CheckForFailedDockedArms())
	eInnerState_Selftest2_Node_6 ----> eInnerState_Selftest2_ERROR : (NOT (CheckForFailedDockedArms()))
	eInnerState_HaltSelftest_Node_1 ----> eInnerState_HaltSelftest_Node_2 : (ArmsReady = E_Arm.Both)
	eInnerState_HaltSelftest ----> eInnerState_EndCase : (bEndCase)
	eInnerState_HaltSelftest ----> eInnerState_Idle : (NOT (bEndCase))
	eInnerState_HaltSelftest_Node_1 ----> eInnerState_HaltSelftest_Node_3 : (NOT (ArmsReady = E_Arm.Both))
	eInnerState_HaltSelftest_Node_3 ----> eInnerState_HaltSelftest_Node_4 : (ArmsFailed <> E_Arm.None)
	eInnerState_HaltSelftest_Node_4 ----> eInnerState_HaltSelftest_ERROR : (ArmsFailed <> E_Arm.None)
	eInnerState_Ergonomics1 ----> eInnerState_Ergonomics2 : None
	eInnerState_Ergonomics2_Node_1 ----> eInnerState_Ergonomics2_Node_2
	eInnerState_Ergonomics2_Node_2 ----> eInnerState_Ergonomics2_Node_3 : (Halt)
	eInnerState_Ergonomics2_Node_3 ----> eInnerState_Ergonomics2_Node_4 : (bEstopPressed)
	eInnerState_Ergonomics2 ----> eInnerState_HaltErgonomics : (Halt)
	eInnerState_Ergonomics2_Node_2 ----> eInnerState_Ergonomics2_Node_5 : (NOT (Halt))
	eInnerState_Ergonomics2 ----> eInnerState_Teleoperation1 : (fbRightArm.Ready\nAND  fbLeftArm.Ready)
	eInnerState_Ergonomics2_Node_5 ----> eInnerState_Ergonomics2_Node_6 : (NOT (fbRightArm.Ready\nAND  fbLeftArm.Ready))
	eInnerState_Ergonomics2_Node_5 ----> eInnerState_Ergonomics2_Node_7 : (NOT (fbRightArm.Ready\nAND  fbLeftArm.Ready))
	eInnerState_Ergonomics2_Node_7 ----> eInnerState_Ergonomics2_Node_8 : (fbRightArm.Failed)
	eInnerState_Ergonomics2_Node_8 ----> eInnerState_Ergonomics2_ERROR : (fbRightArm.Failed)
	eInnerState_Ergonomics2_Node_5 ----> eInnerState_Ergonomics2_Node_9 : (NOT (fbRightArm.Ready\nAND  fbLeftArm.Ready))
	eInnerState_Ergonomics2_Node_9 ----> eInnerState_Ergonomics2_Node_10 : (fbLeftArm.Failed)
	eInnerState_Ergonomics2_Node_10 ----> eInnerState_Ergonomics2_ERROR : (fbLeftArm.Failed)
	eInnerState_HaltErgonomics_Node_1 ----> eInnerState_HaltErgonomics_Node_2
	eInnerState_HaltErgonomics_Node_2 ----> eInnerState_HaltErgonomics_Node_3 : (ArmsReady = E_Arm.Both)
	eInnerState_HaltErgonomics ----> eInnerState_EndCase : (bEndCase)
	eInnerState_HaltErgonomics ----> eInnerState_Idle : (NOT (bEndCase))
	eInnerState_HaltErgonomics_Node_2 ----> eInnerState_HaltErgonomics_Node_4 : (NOT (ArmsReady = E_Arm.Both))
	eInnerState_HaltErgonomics_Node_4 ----> eInnerState_HaltErgonomics_Node_5 : (ArmsFailed <> E_Arm.None)
	eInnerState_HaltErgonomics_Node_5 ----> eInnerState_HaltErgonomics_ERROR : (ArmsFailed <> E_Arm.None)
	eInnerState_Teleoperation1_Node_1 ----> eInnerState_Teleoperation1_Node_2
	eInnerState_Teleoperation1 ----> eInnerState_HaltTeleoperation : (Halt)
	eInnerState_Teleoperation1_Node_2 ----> eInnerState_Teleoperation1_Node_3 : (NOT (Halt))
	eInnerState_Teleoperation1 ----> eInnerState_Teleoperation2 : (ArmsDocked = E_Arm.Both)
	eInnerState_Teleoperation2_Node_1 ----> eInnerState_Teleoperation2_Node_2
	eInnerState_Teleoperation2 ----> eInnerState_HaltTeleoperation : (Halt)
	eInnerState_Teleoperation2_Node_2 ----> eInnerState_Teleoperation2_Node_3 : (NOT (Halt))
	eInnerState_Teleoperation2 ----> eInnerState_Teleoperation3 : (ArmsDocked <> E_Arm.Both)
	eInnerState_Teleoperation3_Node_1 ----> eInnerState_Teleoperation3_Node_2
	eInnerState_Teleoperation3 ----> eInnerState_HaltTeleoperation : (Halt)
	eInnerState_Teleoperation3_Node_2 ----> eInnerState_Teleoperation3_Node_3 : (NOT (Halt))
	eInnerState_Teleoperation3_Node_3 ----> eInnerState_Teleoperation3_Node_4 : (ArmsDocked = E_Arm.Both)
	eInnerState_Teleoperation3 ----> eInnerState_TeleopSetup : (ArmsDocked = E_Arm.Both)
	eInnerState_TeleopSetup_Node_1 ----> eInnerState_TeleopSetup_Node_2
	eInnerState_TeleopSetup ----> eInnerState_HaltTeleoperation : (Halt)
	eInnerState_TeleopSetup_Node_2 ----> eInnerState_TeleopSetup_Node_3 : (NOT (Halt))
	eInnerState_TeleopSetup_Node_3 ----> eInnerState_TeleopSetup_Node_4 : (ArmsFailed = E_Arm.None)
	eInnerState_TeleopSetup ----> eInnerState_TeleopActive : (NOT (ArmsDocked = E_Arm.Both))
	eInnerState_TeleopSetup_Node_3 ----> eInnerState_TeleopSetup_Node_5 : (NOT (ArmsFailed = E_Arm.None))
	eInnerState_TeleopSetup_Node_5 ----> eInnerState_TeleopSetup_Node_6 : (fbRightArm.Failed)
	eInnerState_TeleopSetup_Node_6 ----> eInnerState_TeleopSetup_ERROR : (fbRightArm.Failed)
	eInnerState_TeleopSetup_Node_3 ----> eInnerState_TeleopSetup_Node_7 : (NOT (ArmsFailed = E_Arm.None))
	eInnerState_TeleopSetup_Node_7 ----> eInnerState_TeleopSetup_Node_8 : (fbLeftArm.Failed)
	eInnerState_TeleopSetup_Node_8 ----> eInnerState_TeleopSetup_ERROR : (fbLeftArm.Failed)
	eInnerState_TeleopActive_Node_1 ----> eInnerState_TeleopActive_Node_2
	eInnerState_TeleopActive_Node_2 ----> eInnerState_TeleopActive_Node_3 : (Halt)
	eInnerState_TeleopActive ----> eInnerState_HaltTeleoperation : (ArmsDocked = E_Arm.Both)
	eInnerState_TeleopActive_Node_2 ----> eInnerState_TeleopActive_Node_4 : (NOT (Halt))
	eInnerState_TeleopActive_Node_4 ----> eInnerState_TeleopActive_Node_5 : (ArmsFailed = E_Arm.None)
	eInnerState_TeleopActive ----> eInnerState_TeleopSetup : (ArmsDocked <> E_Arm.Both)
	eInnerState_TeleopActive_Node_5 ----> eInnerState_TeleopActive_Node_6 : (NOT (ArmsDocked <> E_Arm.Both))
	eInnerState_TeleopActive ----> eInnerState_HaltTeleoperation : (fbRightArm.ErrorNeedToDock\nOR fbLeftArm.ErrorNeedToDock)
	eInnerState_TeleopActive_Node_4 ----> eInnerState_TeleopActive_Node_7 : (NOT (ArmsFailed = E_Arm.None))
	eInnerState_TeleopActive_Node_7 ----> eInnerState_TeleopActive_Node_8 : (fbRightArm.Failed)
	eInnerState_TeleopActive_Node_8 ----> eInnerState_TeleopActive_ERROR : (fbRightArm.Failed)
	eInnerState_TeleopActive_Node_4 ----> eInnerState_TeleopActive_Node_9 : (NOT (ArmsFailed = E_Arm.None))
	eInnerState_TeleopActive_Node_9 ----> eInnerState_TeleopActive_Node_10 : (fbLeftArm.Failed)
	eInnerState_TeleopActive_Node_10 ----> eInnerState_TeleopActive_ERROR : (fbLeftArm.Failed)
	eInnerState_HaltTeleoperation_Node_1 ----> eInnerState_HaltTeleoperation_Node_2
	eInnerState_HaltTeleoperation_Node_2 ----> eInnerState_HaltTeleoperation_Node_3 : (ArmsReady = E_Arm.Both)
	eInnerState_HaltTeleoperation ----> eInnerState_EndCase : (bEndCase)
	eInnerState_HaltTeleoperation ----> eInnerState_Idle : (NOT (bEndCase))
	eInnerState_HaltTeleoperation_Node_2 ----> eInnerState_HaltTeleoperation_Node_4 : (NOT (ArmsReady = E_Arm.Both))
	eInnerState_HaltTeleoperation_Node_4 ----> eInnerState_HaltTeleoperation_Node_5 : (ArmsFailed <> E_Arm.None)
	eInnerState_HaltTeleoperation_Node_5 ----> eInnerState_HaltTeleoperation_ERROR : (ArmsFailed <> E_Arm.None)
	eInnerState_EndCase_Node_1 ----> eInnerState_EndCase_Node_2
	eInnerState_EndCase ----> eInnerState_Idle : None
eInnerState : fbRightArm();\nfbLeftArm();\n
eInnerState : UpdateFrontend();\nUpdatePanelLEDs();\n


}

@enduml
